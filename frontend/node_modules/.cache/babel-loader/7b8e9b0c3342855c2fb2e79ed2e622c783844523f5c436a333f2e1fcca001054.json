{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/kube-1-shot/project/chat-app/frontend/src/pages/LoginPage.js\";\nimport LoginForm from \"../components/LoginForm\";\nimport styles from \"../styles/LoginPage.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LoginPage() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.box,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Login to Your Account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(LoginForm, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 9\n  }, this);\n}\n_c = LoginPage;\nconst handleLogin = async () => {\n  const response = await fetch(\"http://localhost:5000/login\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      username,\n      password\n    })\n  });\n  const data = await response.json();\n  if (data.success) {\n    localStorage.setItem(\"currentUser\", data.user); // Store username persistently\n    window.location.href = \"/chat\"; // Redirect to chat page\n  }\n};\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["LoginForm","styles","jsxDEV","_jsxDEV","LoginPage","className","container","children","box","fileName","_jsxFileName","lineNumber","columnNumber","_c","handleLogin","response","fetch","method","headers","body","JSON","stringify","username","password","data","json","success","localStorage","setItem","user","window","location","href","$RefreshReg$"],"sources":["/home/ubuntu/kube-1-shot/project/chat-app/frontend/src/pages/LoginPage.js"],"sourcesContent":["import LoginForm from \"../components/LoginForm\";\nimport styles from \"../styles/LoginPage.module.css\";\n\nfunction LoginPage() {\n    return (\n        <div className={styles.container}>\n            <div className={styles.box}>\n                <h2>Login to Your Account</h2>\n                <LoginForm />\n            </div>\n        </div>\n    );\n}\n\n\nconst handleLogin = async () => {\n    const response = await fetch(\"http://localhost:5000/login\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ username, password })\n    });\n\n    const data = await response.json();\n    if (data.success) {\n        localStorage.setItem(\"currentUser\", data.user); // Store username persistently\n        window.location.href = \"/chat\"; // Redirect to chat page\n    }\n};\n\n\nexport default LoginPage;\n"],"mappings":";AAAA,OAAOA,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,MAAM,MAAM,gCAAgC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,SAASC,SAASA,CAAA,EAAG;EACjB,oBACID,OAAA;IAAKE,SAAS,EAAEJ,MAAM,CAACK,SAAU;IAAAC,QAAA,eAC7BJ,OAAA;MAAKE,SAAS,EAAEJ,MAAM,CAACO,GAAI;MAAAD,QAAA,gBACvBJ,OAAA;QAAAI,QAAA,EAAI;MAAqB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC9BT,OAAA,CAACH,SAAS;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAACC,EAAA,GATQT,SAAS;AAYlB,MAAMU,WAAW,GAAG,MAAAA,CAAA,KAAY;EAC5B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAA6B,EAAE;IACxDC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEC,QAAQ;MAAEC;IAAS,CAAC;EAC/C,CAAC,CAAC;EAEF,MAAMC,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;EAClC,IAAID,IAAI,CAACE,OAAO,EAAE;IACdC,YAAY,CAACC,OAAO,CAAC,aAAa,EAAEJ,IAAI,CAACK,IAAI,CAAC,CAAC,CAAC;IAChDC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,OAAO,CAAC,CAAC;EACpC;AACJ,CAAC;AAGD,eAAe5B,SAAS;AAAC,IAAAS,EAAA;AAAAoB,YAAA,CAAApB,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}