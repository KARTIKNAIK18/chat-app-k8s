{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/kube-1-shot/project/chat-app/frontend/src/components/Chat.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport socket from \"../socket\";\nimport styles from \"../styles/Chat.module.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Chat({\n  currentUser\n}) {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [messages, setMessages] = useState({});\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [input, setInput] = useState(\"\");\n  const [typingUser, setTypingUser] = useState(null);\n  useEffect(() => {\n    if (selectedUser) {\n      socket.emit(\"messageRead\", {\n        sender: currentUser,\n        recipient: selectedUser\n      });\n    }\n  }, [selectedUser]);\n  useEffect(() => {\n    socket.emit(\"register\", currentUser);\n    const handleUserList = userList => {\n      setUsers(userList.filter(user => user !== currentUser)); // Exclude self\n    };\n    const handleMessage = ({\n      sender,\n      message\n    }) => {\n      setMessages(prev => ({\n        ...prev,\n        [sender]: [...(prev[sender] || []), {\n          sender,\n          message\n        }]\n      }));\n    };\n    const handleTyping = ({\n      sender\n    }) => {\n      setTypingUser(sender);\n      setTimeout(() => setTypingUser(null), 2000); // Remove after 2 sec\n    };\n    socket.on(\"userList\", handleUserList);\n    socket.on(\"message\", handleMessage);\n    socket.on(\"typing\", handleTyping);\n    return () => {\n      socket.off(\"userList\", handleUserList);\n      socket.off(\"message\", handleMessage);\n      socket.off(\"typing\", handleTyping);\n    };\n  }, [currentUser]);\n  useEffect(() => {\n    if (selectedUser && input.trim()) {\n      socket.emit(\"typing\", {\n        sender: currentUser,\n        recipient: selectedUser\n      });\n    }\n  }, [input, selectedUser]);\n  const sendMessage = () => {\n    if (input.trim() && selectedUser) {\n      socket.emit(\"message\", {\n        sender: currentUser,\n        recipient: selectedUser,\n        message: input\n      });\n      setMessages(prev => ({\n        ...prev,\n        [selectedUser]: [...(prev[selectedUser] || []), {\n          sender: currentUser,\n          message: input\n        }]\n      }));\n      setInput(\"\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.chatContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.userList,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Online Users\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), users.length > 0 ? users.map(user => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.userItem,\n        onClick: () => setSelectedUser(user),\n        children: user\n      }, user, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 25\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No users online\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.chatBox,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.messageArea,\n        children: [(messages[selectedUser] || []).map((msg, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n          className: msg.sender === currentUser ? styles.sent : styles.received,\n          children: msg.message\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 25\n        }, this)), typingUser && selectedUser === typingUser && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: styles.typingIndicator,\n          children: [typingUser, \" is typing...\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), selectedUser && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: input,\n          onChange: e => setInput(e.target.value),\n          placeholder: \"Type a message...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: sendMessage,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n}\n_s(Chat, \"tBEY3B92JJ82gP7Ge1x0pzK+2E8=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["useState","useEffect","socket","styles","jsxDEV","_jsxDEV","Fragment","_Fragment","Chat","currentUser","_s","users","setUsers","messages","setMessages","selectedUser","setSelectedUser","input","setInput","typingUser","setTypingUser","emit","sender","recipient","handleUserList","userList","filter","user","handleMessage","message","prev","handleTyping","setTimeout","on","off","trim","sendMessage","className","chatContainer","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","userItem","onClick","chatBox","messageArea","msg","index","sent","received","typingIndicator","value","onChange","e","target","placeholder","_c","$RefreshReg$"],"sources":["/home/ubuntu/kube-1-shot/project/chat-app/frontend/src/components/Chat.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport socket from \"../socket\";\nimport styles from \"../styles/Chat.module.css\";\n\nfunction Chat({ currentUser }) {\n    const [users, setUsers] = useState([]);\n    const [messages, setMessages] = useState({});\n    const [selectedUser, setSelectedUser] = useState(null);\n    const [input, setInput] = useState(\"\");\n    const [typingUser, setTypingUser] = useState(null);\n\n    useEffect(() => {\n    if (selectedUser) {\n        socket.emit(\"messageRead\", { sender: currentUser, recipient: selectedUser });\n    }\n}, [selectedUser]);\n\n\n    useEffect(() => {\n        socket.emit(\"register\", currentUser);\n\n        const handleUserList = (userList) => {\n            setUsers(userList.filter(user => user !== currentUser)); // Exclude self\n        };\n\n        \n\n        const handleMessage = ({ sender, message }) => {\n            setMessages((prev) => ({\n                ...prev,\n                [sender]: [...(prev[sender] || []), { sender, message }]\n            }));\n        };\n\n        const handleTyping = ({ sender }) => {\n            setTypingUser(sender);\n            setTimeout(() => setTypingUser(null), 2000); // Remove after 2 sec\n        };\n\n        socket.on(\"userList\", handleUserList);\n        socket.on(\"message\", handleMessage);\n        socket.on(\"typing\", handleTyping);\n\n        return () => {\n            socket.off(\"userList\", handleUserList);\n            socket.off(\"message\", handleMessage);\n            socket.off(\"typing\", handleTyping);\n        };\n    }, [currentUser]);\n\n    useEffect(() => {\n        if (selectedUser && input.trim()) {\n            socket.emit(\"typing\", { sender: currentUser, recipient: selectedUser });\n        }\n    }, [input, selectedUser]);\n\n    const sendMessage = () => {\n        if (input.trim() && selectedUser) {\n            socket.emit(\"message\", { sender: currentUser, recipient: selectedUser, message: input });\n\n            setMessages((prev) => ({\n                ...prev,\n                [selectedUser]: [...(prev[selectedUser] || []), { sender: currentUser, message: input }]\n            }));\n\n            setInput(\"\");\n        }\n    };\n\n    return (\n        <div className={styles.chatContainer}>\n            <div className={styles.userList}>\n                <h3>Online Users</h3>\n                {users.length > 0 ? (\n                    users.map((user) => (\n                        <div key={user} className={styles.userItem} onClick={() => setSelectedUser(user)}>\n                            {user}\n                        </div>\n                    ))\n                ) : (\n                    <p>No users online</p>\n                )}\n            </div>\n\n            <div className={styles.chatBox}>\n                <div className={styles.messageArea}>\n                    {(messages[selectedUser] || []).map((msg, index) => (\n                        <p key={index} className={msg.sender === currentUser ? styles.sent : styles.received}>\n                            {msg.message}\n                        </p>\n                    ))}\n                    {typingUser && selectedUser === typingUser && (\n                        <p className={styles.typingIndicator}>{typingUser} is typing...</p>\n                    )}\n                </div>\n\n                {selectedUser && (\n                    <>\n                        <input value={input} onChange={(e) => setInput(e.target.value)} placeholder=\"Type a message...\" />\n                        <button onClick={sendMessage}>Send</button>\n                    </>\n                )}\n            </div>\n        </div>\n    );\n}\n\nexport default Chat;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}